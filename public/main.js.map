{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/fb-post/fb-post.component.css","webpack:///./src/app/fb-post/fb-post.component.html","webpack:///./src/app/fb-post/fb-post.component.ts","webpack:///./src/app/ig-post/ig-post.component.css","webpack:///./src/app/ig-post/ig-post.component.html","webpack:///./src/app/ig-post/ig-post.component.ts","webpack:///./src/app/services/fb.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class =\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">FB-Winner</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button> \\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/fb-post']\\\">Facebook Post</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/ig-post']\\\">Instagram Post</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'fb-winner';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Component } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { FbPostComponent } from './fb-post/fb-post.component';\nimport { IgPostComponent } from './ig-post/ig-post.component';\n\nconst appRoutes : Routes =[\n  {\n    path: 'fb-post',\n    component: FbPostComponent,\n    data : { title : 'FB POST'}\n  },\n  {\n    path: 'ig-post',\n    component: IgPostComponent,\n    data : { title : 'IG POST'}\n  }\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FbPostComponent,\n    IgPostComponent\n  ],\n  imports: [\n    FormsModule,\n    HttpClientModule,\n    BrowserModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // <-- debugging purposes only\n    )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<!-- HEADER AND TODO COUNT -->\\n<div class=\\\"jumbotron text-center\\\">\\n  <h1>FACEBOOK POST<span class=\\\"label label-meteo\\\"></span></h1>\\n</div>\\n\\n<!-- FORM TO CREATE TODOS -->\\n<div id=\\\"todo-form\\\" class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 text-center\\\">\\n      <form  novalidate name =\\\"ngForm\\\"  #formRef=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formRef.value)\\\">\\n          <div class=\\\"form-group\\\">\\n              <!-- BIND THIS VALUE TO formData.text IN ANGULAR -->\\n              <input type=\\\"text\\\" class=\\\"form-control input-lg text-center\\\" placeholder=\\\"past your facebook app access token here\\\" name=\\\"page_access_token\\\" [(ngModel)]=\\\"page_access_token\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <!-- BIND THIS VALUE TO formData.text IN ANGULAR -->\\n              <input type=\\\"text\\\" class=\\\"form-control input-lg text-center\\\" placeholder=\\\"past your facebook post url here\\\" name=\\\"post_url\\\" [(ngModel)]=\\\"post_url\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <!-- createToDo() WILL CREATE NEW TODOS -->\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg\\\" >Get Winner</button>\\n          </div>\\n\\n          <div class=\\\"winner-element\\\"  [hidden]=\\\"submitted\\\">   \\n              <div *ngIf=\\\"winner\\\" class=\\\"alert alert-success alert-dismissible\\\">\\n                  <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\n                  And the winner is ... <strong> {{winner}} </strong>\\n              </div>\\n\\n              <div *ngIf=\\\"!winner\\\" class=\\\"alert alert-danger alert-dismissible\\\">\\n                  <a href=\\\"#\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"close\\\">&times;</a>\\n                  <strong>Oops!</strong> Make sure you have the wirght url and access token!\\n              </div>\\n          </div>\\n\\n      </form>\\n\\n  </div>\\n</div>\\n\\n\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport {NgForm} from '@angular/forms';\nimport { FbService } from '../services/fb.service'\n\n@Component({\n  selector: 'app-fb-post',\n  templateUrl: './fb-post.component.html',\n  styleUrls: ['./fb-post.component.css']\n})\nexport class FbPostComponent implements OnInit {\n  public comments; \n  public winner;\n  public submitted = true;\n\n\n  constructor(private http: HttpClient, private router : Router, private _fb : FbService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(formValue) {\n    this.GetCommentators(formValue.post_url,formValue.page_access_token)\n    .then((data:any)=>{\n      console.log(data);\n      this.comments = data; \n      this.winner = this.GetWinner(this.comments);\n      this.submitted = false;\n      console.log(this.winner);\n   })\n\n  }\n\n  GetCommentators(path,page_access_token){\n    var pathArray = path.split('/');\n    var post_id = pathArray[6];\n    return new Promise(resolve=>{\n      this._fb.getPostComments(post_id,page_access_token)\n      .subscribe(\n        result => {\n          resolve(result)\n        },\n        error => {\n          this.submitted = false;\n          this.winner = null; \n        },\n      ) \n       \n      })\n    }\n\n  GetWinner(comments){\n    var i = 0;\n    let people = []; \n    let winner; \n    comments.data.forEach(element => {\n      people[i]= element.from.name\n      i ++\n    });\n    winner = people[Math.floor(Math.random()*people.length)];\n    return winner; \n   }\n  \n}\n    \n\n\n","module.exports = \"\"","module.exports = \"<!-- HEADER AND TODO COUNT -->\\n<div class=\\\"jumbotron text-center\\\">\\n  <h1>INSTAGRAM POST<span class=\\\"label label-meteo\\\"></span></h1>\\n</div>\\n\\n<!-- FORM TO CREATE TODOS -->\\n<div id=\\\"todo-form\\\" class=\\\"row\\\">\\n  <div class=\\\"col-sm-8 col-sm-offset-2 text-center\\\">\\n      <form  novalidate #formRef=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(formRef.value)\\\">\\n          <div class=\\\"form-group\\\">\\n              <!-- BIND THIS VALUE TO formData.text IN ANGULAR -->\\n              <input type=\\\"text\\\" class=\\\"form-control input-lg text-center\\\" placeholder=\\\"past instagram link here\\\" name=\\\"cityName\\\" [(ngModel)]=\\\"cityName\\\" [ngModelOptions]=\\\"{updateOn: 'blur'}\\\" required>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <!-- createToDo() WILL CREATE NEW TODOS -->\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg\\\" >Get Winner</button>\\n          </div>\\n      </form>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ig-post',\n  templateUrl: './ig-post.component.html',\n  styleUrls: ['./ig-post.component.css']\n})\nexport class IgPostComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {Observable} from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n providedIn: 'root'\n})\nexport class FbService {\n\n constructor(private http:HttpClient) { }\n\n /*getMeteos() {\n   return this.http.get('/meteo');\n }*/\n\n getPostComments(post_id,page_access_token) {\n   return this.http.get('/api/comments/'+post_id+'/'+page_access_token);\n }\n\n /*saveMeteo(data) {\n   return this.http.post('/meteo', data);\n }*/\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}